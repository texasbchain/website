"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _clsx3 = _interopRequireDefault(require("clsx"));

var _isReact = _interopRequireDefault(require("is-react"));

var _Button = _interopRequireDefault(require("@material-ui/core/Button"));

var _Grid = _interopRequireDefault(require("@material-ui/core/Grid"));

var _Tooltip = _interopRequireDefault(require("@material-ui/core/Tooltip"));

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var _withStyles = _interopRequireDefault(require("@material-ui/core/styles/withStyles"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var styles = {
  container: {
    position: 'relative'
  },
  icon: {
    position: 'absolute',
    top: 16,
    left: 92.5,
    fontSize: 40,
    color: '#fff'
  },
  iconSimple: {
    left: 16
  },
  iconSmall: {
    position: 'absolute',
    top: 8,
    left: 8,
    fontSize: 16,
    color: '#e0e0e0'
  },
  circleContainer: {
    marginRight: 31
  },
  circleContainerSmall: {
    display: 'flex',
    flex: 'auto',
    alignItems: 'center',
    marginRight: 11
  },
  action: {
    '&:hover': {
      cursor: 'pointer'
    }
  },
  tooltip: {
    textAlign: 'center'
  },
  barSimple: {
    position: 'absolute',
    top: '50%',
    left: -31,
    width: 31,
    height: 3,
    backgroundColor: '#f2f2f2'
  },
  barSmall: {
    position: 'absolute',
    top: '50%',
    left: -11,
    width: 11,
    height: 3,
    backgroundColor: '#f2f2f2'
  },
  textContainer: {
    marginTop: -40,
    textAlign: 'center'
  },
  actionContainer: {
    margin: '16px auto'
  },
  buttonContainer: {
    margin: '16px auto',
    textAlign: 'center'
  },
  button: {
    color: '#fff'
  }
};

var TimelineEvent = function TimelineEvent(_ref) {
  var classes = _ref.classes,
      variant = _ref.variant,
      first = _ref.first,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? '#e0e0e0' : _ref$color,
      Icon = _ref.icon,
      title = _ref.title,
      subtitle = _ref.subtitle,
      action = _ref.action,
      titleProps = _ref.titleProps,
      subtitleProps = _ref.subtitleProps;

  switch (variant) {
    case 'small':
      return /*#__PURE__*/_react["default"].createElement(_Grid["default"], {
        className: classes.container
      }, /*#__PURE__*/_react["default"].createElement(_react.Fragment, null, /*#__PURE__*/_react["default"].createElement(_Tooltip["default"], {
        title: /*#__PURE__*/_react["default"].createElement(_Grid["default"], {
          className: classes.tooltip
        }, title, /*#__PURE__*/_react["default"].createElement("br", null), subtitle)
      }, /*#__PURE__*/_react["default"].createElement(_Grid["default"], {
        onClick: action && action.onClick,
        className: (0, _clsx3["default"])(classes.circleContainerSmall, _defineProperty({}, classes.action, action))
      }, Icon && /*#__PURE__*/_react["default"].createElement(Icon, {
        className: classes.iconSmall,
        style: {
          color: color
        }
      }), /*#__PURE__*/_react["default"].createElement("svg", {
        width: 32,
        height: 32,
        viewBox: "0 0 8.467 8.467"
      }, /*#__PURE__*/_react["default"].createElement("circle", {
        cx: 4.233,
        cy: 292.767,
        r: 4.035,
        fill: "#fff",
        stroke: color,
        strokeWidth: 0.397,
        transform: "translate(0 -288.533)"
      })))), !first && /*#__PURE__*/_react["default"].createElement(_Grid["default"], {
        className: classes.barSmall
      })));

    case 'simple':
      return /*#__PURE__*/_react["default"].createElement(_Grid["default"], {
        className: classes.container
      }, /*#__PURE__*/_react["default"].createElement(_react.Fragment, null, /*#__PURE__*/_react["default"].createElement(_Tooltip["default"], {
        title: /*#__PURE__*/_react["default"].createElement(_Grid["default"], {
          className: classes.tooltip
        }, title, /*#__PURE__*/_react["default"].createElement("br", null), subtitle)
      }, /*#__PURE__*/_react["default"].createElement(_Grid["default"], {
        onClick: action && action.onClick,
        className: (0, _clsx3["default"])(classes.circleContainer, _defineProperty({}, classes.action, action))
      }, Icon && /*#__PURE__*/_react["default"].createElement(Icon, {
        className: (0, _clsx3["default"])(classes.icon, classes.iconSimple)
      }), /*#__PURE__*/_react["default"].createElement("svg", {
        viewBox: "0 0 19.05 19.05",
        height: 72,
        width: 72
      }, /*#__PURE__*/_react["default"].createElement("g", {
        transform: "translate(0 -277.95)"
      }, /*#__PURE__*/_react["default"].createElement("circle", {
        cx: 9.525,
        cy: 287.475,
        r: 9.525,
        fill: color,
        strokeWidth: 0.193
      }))))), !first && /*#__PURE__*/_react["default"].createElement(_Grid["default"], {
        className: classes.barSimple
      })));

    default:
      return /*#__PURE__*/_react["default"].createElement(_Grid["default"], {
        className: classes.container
      }, /*#__PURE__*/_react["default"].createElement(_react.Fragment, null, Icon && /*#__PURE__*/_react["default"].createElement(Icon, {
        className: classes.icon
      }), /*#__PURE__*/_react["default"].createElement("svg", {
        width: 225,
        height: 187,
        viewBox: "0 0 59.531 49.477"
      }, /*#__PURE__*/_react["default"].createElement("g", {
        transform: "matrix(.99959 0 0 .99838 -100.96 -38.57)"
      }, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M101.002 69.656h55.492l4.064 4.158-4.064 4.205h-55.492l3.85-4.205z",
        fill: color,
        strokeWidth: 0.24
      }), /*#__PURE__*/_react["default"].createElement("circle", {
        cx: 130.726,
        cy: 73.838,
        r: 1.522,
        fill: "#fff",
        strokeWidth: 0.15
      }), /*#__PURE__*/_react["default"].createElement("circle", {
        cx: 130.78,
        cy: 48.202,
        r: 9.57,
        fill: color,
        strokeWidth: 0.194
      }), /*#__PURE__*/_react["default"].createElement("rect", {
        width: 0.794,
        height: 14.363,
        x: 130.383,
        y: 56.309,
        ry: 0,
        fill: color,
        strokeWidth: 0.108
      }))), /*#__PURE__*/_react["default"].createElement(_Grid["default"], {
        className: classes.textContainer
      }, typeof title === 'string' ? /*#__PURE__*/_react["default"].createElement(_Typography["default"], _extends({
        variant: "h6"
      }, titleProps), title) : title, typeof subtitle === 'string' ? /*#__PURE__*/_react["default"].createElement(_Typography["default"], _extends({
        variant: "caption"
      }, subtitleProps), subtitle) : subtitle), action && /*#__PURE__*/_react["default"].createElement(_Grid["default"], {
        className: classes.actionContainer
      }, _isReact["default"].compatible(action) ? action : /*#__PURE__*/_react["default"].createElement(_Grid["default"], {
        className: classes.buttonContainer
      }, /*#__PURE__*/_react["default"].createElement(_Button["default"], {
        size: "small",
        onClick: action.onClick,
        className: classes.button,
        style: {
          backgroundColor: color
        }
      }, action.label)))));
  }
};

var _default = (0, _withStyles["default"])(styles)(TimelineEvent);

exports["default"] = _default;